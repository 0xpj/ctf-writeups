import itertools

cipher = '78 fc d5 fd 96 cb 82 5d 1f 25 5e 25 a4 dc 7b 56 45 ce 8e e2 ab 0b 70 d0 32 53 5e 9f 96 dc f0 b8 cc ce a3 d5 4c 67 70 75 14 82 d7 9f b8 dc f0 ca 6f 64 88 a2 96 a6 a4 c7 99 18 8e 65 2a e1 60 81 65 c1 d5 72 98 18 29 8c 32 cc 63 88 96 0c 7b f7 cc 66 04 04 81 32 a0 20 10 80 7c 6f b8 aa 6f 81 45 66 a3 04 b4 80 a4 d8 10 07 fb 88 b8 35 e9 f7 f3 fc b8 5f bc 80 c1 fa 32 25 7c 97 0c dc bf f7 5e 66 2c 04 4c b2 a0 5d 71 80 49 6f 47 53 5d 81 78 eb 06 50 96 34 07 8c 3a 2a 8e 65 31 f6 60 ca ac 77 2a d5 96 a6 07 c7 9f f5 5e b5 eb 20 ab 67 78 e3 89 69 b4 bd a0 73 3a 21 f9 97 31 aa 60 52 e2 48 2a a2 96 bd 8a 75 c0 25 b7 12 31 0c f0 50 4a 4e 04 72 33 1a 82 4c b1 53 84 5c 0c 7d 16 f7 e0 c1 9e 13 96 80 7a 75 32 80 ce 6a 2a f6 c7 ec e2 66 d5 72 b4 aa 7a d0 0b 2a 5e 88 31 35 77 50 33 c1 89 a8 1f 67 a0 5d c0 18 d1 10 26 7b 60 50 6f 11 a3 58 8d b9 30 5f 66 0f 5e b5 0c c7 e9 27 78 4e a3 a2 49 a6 82 e1 66 53 84 6f 87 7b e9 ca 9f 1b d5 d7 96 2d 05 8c 1f 82 d7 b5 eb 53 5d 81 9f 66 04 13 96 80 82 e1 0b 84 51 c3 0c 55 4a 81 45 eb b4 d5 4c 1a d6 20 99 f5 84 c3 ee dc ba 41 e2 77 a3 a2 31 67 af 8c 1f 0f e8 bb 13 dc 89 f3 9f b7 81 72 e0 a6 a0 c7 c0 07 e8 c3 0c 55 4a 81 ac 4e b8 4f 8d 32 07 fa 5f ff 28 b5 2a 03 6f 2d 45 66 a3 4f b4 80 29 2a 66 cc 5e ba 13 d8 89 41 45 eb b4 d5 4c 1a d6 20 99 f5 84 03 b8 aa c7 41 95 fc 81 d5 96 97 07 2a b7 93 ff 5c 31 d2 c7 1e 41 c1 06 50 31 34 80 8c 3a d9 39 97 31 aa 60 ca d5 fc 2c 69 ab bd 82 5b 3a 25 8e ae eb e1 60 50 45 eb 2a d3 ab b2 70 fa 32 53 d7 6f b8 7b e9 81 5e 28 ad 50 96 80 d6 2a 66 ac 5e 98 ee 6a 4a e0 33 1b 1c d7 31 67 70 75 10 18 d1 b5 96 79 6e 81 95 48 04 d3 46 67 29 d8 71 18 28 3c 47 06 c7 dd e2 da d5 a8 96 cb 7a 20 9f 2a 5a 25 31 f6 e9 52 6f da a3 a8 19 80 16 2a cf 53 28 3c 31 fe b0 7e 6f eb 9e 7d e0 bd 29 5f 14 53 84 97 31 e1 42 d5 45 c1 04 fb 7f cb d6 75 66 f5 74 3c 96 dc 4a 27 78 4e a3 a8 33 67 8a 75 10 ff 74 ae eb e1 60 81 cc e3 7c 4f 46 41 a0 fa 25 21 f9 ae 87 aa 16 d5 45 da 04 4f 46 bd a0 fe 32 18 7c 3a 2a e1 42 dd 9f fc 04 72 20 67 82 75 71 07 d1 b5 96 79 16 81 e2 1b d5 a2 1f bd 82 d0 c0 53 d1 10 31 e1 77 96 45 c1 4a 58 1f b2 07 d0 c0 f5 fb 9f 31 4c b0 50 e2 eb a7 72 37 9f 70 06 10 84 7c c3 0c 55 77 50 67 eb 06 fb 92 2d 7f e1 2d 25 ce 12 fa 35 60 f7 67 1b 79 72 91 9f 8a fa 07 2b 5e b5 be fe 16 ca 5e a0 89 58 8d 6d 2f d0 a6 fa 5e c3 96 95 7b 67 45 c1 2a 96 ab 6d d6 5f 10 ff 50 5c 31 55 c7 dd 5e 77 15 69 92 67 c1 8c ca 25 f9 fc 26 7b 16 ca 78 ec 89 fd 96 67 70 5d c0 25 63 25 be dc 7b 2d 5c eb 04 b2 92 54 a0 5d 10 ac 5e ac cd 50 ec 7e 6f 4e 33 e2 96 90 bb 25 10 18 7c 12 35 fe 60 f7 24 4e 33 72 fd cb bb d8 10 18 35 80 b7 17 42 f7 45 48 88 8b 63 3b 3b d0 40 4b 50 97 0c c7 4a 6c 68 c1 a3 b5 6f cb d6 d8 10 ff d7 c5 1a ea d9 1e 5e c1 2c d5 4c bd 07 fa 10 d9 5e 88 3e 35 7b f7'.split()
cipher = [chr(int(blah, 16)) for blah in cipher][:640]

sbox = {
    0: 70,
    1: 162,
    2: 120,
    3: 88,
    4: 97,
    5: 191,
    6: 116,
    7: 211,
    8: 240,
    9: 171,
    10: 174,
    11: 123,
    12: 47,
    13: 59,
    14: 64,
    15: 29,
    16: 255,
    17: 101,
    18: 196,
    19: 108,
    20: 253,
    21: 201,
    22: 35,
    23: 13,
    24: 164,
    25: 38,
    26: 77,
    27: 148,
    28: 57,
    29: 17,
    30: 37,
    31: 132,
    32: 183,
    33: 159,
    34: 220,
    35: 20,
    36: 93,
    37: 80,
    38: 232,
    39: 78,
    40: 248,
    41: 151,
    42: 202,
    43: 43,
    44: 214,
    45: 8,
    46: 75,
    47: 213,
    48: 113,
    49: 12,
    50: 66,
    51: 112,
    52: 217,
    53: 106,
    54: 128,
    55: 129,
    56: 145,
    57: 203,
    58: 15,
    59: 204,
    60: 223,
    61: 53,
    62: 76,
    63: 147,
    64: 215,
    65: 34,
    66: 168,
    67: 49,
    68: 119,
    69: 144,
    70: 130,
    71: 110,
    72: 33,
    73: 71,
    74: 158,
    75: 250,
    76: 83,
    77: 231,
    78: 208,
    79: 190,
    80: 243,
    81: 14,
    82: 44,
    83: 199,
    84: 124,
    85: 170,
    86: 68,
    87: 5,
    88: 115,
    89: 89,
    90: 210,
    91: 79,
    92: 143,
    93: 26,
    94: 226,
    95: 99,
    96: 63,
    97: 138,
    98: 154,
    99: 184,
    100: 18,
    101: 16,
    102: 39,
    103: 56,
    104: 94,
    105: 193,
    106: 52,
    107: 176,
    108: 172,
    109: 1,
    110: 109,
    111: 157,
    112: 22,
    113: 156,
    114: 103,
    115: 149,
    116: 62,
    117: 179,
    118: 160,
    119: 185,
    120: 254,
    121: 104,
    122: 251,
    123: 141,
    124: 135,
    125: 225,
    126: 238,
    127: 200,
    128: 92,
    129: 133,
    130: 126,
    131: 117,
    132: 153,
    133: 169,
    134: 180,
    135: 237,
    136: 87,
    137: 228,
    138: 150,
    139: 2,
    140: 230,
    141: 249,
    142: 161,
    143: 244,
    144: 139,
    145: 252,
    146: 122,
    147: 207,
    148: 167,
    149: 21,
    150: 114,
    151: 173,
    152: 111,
    153: 105,
    154: 42,
    155: 0,
    156: 73,
    157: 28,
    158: 205,
    159: 187,
    160: 166,
    161: 55,
    162: 32,
    163: 48,
    164: 229,
    165: 216,
    166: 30,
    167: 61,
    168: 182,
    169: 189,
    170: 65,
    171: 140,
    172: 188,
    173: 233,
    174: 127,
    175: 60,
    176: 227,
    177: 7,
    178: 19,
    179: 131,
    180: 31,
    181: 146,
    182: 45,
    183: 175,
    184: 9,
    185: 91,
    186: 177,
    187: 90,
    188: 125,
    189: 96,
    190: 23,
    191: 40,
    192: 194,
    193: 67,
    194: 86,
    195: 155,
    196: 10,
    197: 136,
    198: 224,
    199: 212,
    200: 51,
    201: 25,
    202: 84,
    203: 241,
    204: 247,
    205: 234,
    206: 50,
    207: 222,
    208: 236,
    209: 74,
    210: 100,
    211: 6,
    212: 219,
    213: 163,
    214: 186,
    215: 239,
    216: 245,
    217: 81,
    218: 72,
    219: 118,
    220: 195,
    221: 95,
    222: 165,
    223: 98,
    224: 178,
    225: 246,
    226: 242,
    227: 181,
    228: 102,
    229: 198,
    230: 82,
    231: 152,
    232: 218,
    233: 192,
    234: 121,
    235: 221,
    236: 107,
    237: 197,
    238: 142,
    239: 58,
    240: 4,
    241: 24,
    242: 85,
    243: 235,
    244: 137,
    245: 36,
    246: 206,
    247: 69,
    248: 46,
    249: 11,
    250: 27,
    251: 41,
    252: 134,
    253: 209,
    254: 54,
    255: 3,
}

blocks = [cipher[i:i + 16] for i in range(0, len(cipher), 16)]
columns = list(itertools.izip_longest(*blocks))


def find_solve_range(x):
    poss = []
    for i_ in range(255):
        xor_v = i_ ^ x
        if xor_v in sbox.values()[32:127]:
            poss.append(i_)
    return poss


for column in columns:
    solutions = [set(find_solve_range(ord(c))) for c in set(column)]
    intersect = set.intersection(*solutions)
    print [hex(c) for c in intersect]
